version: '3.8'

services:
  notion-manager-api:
    build: 
      context: ./notion-manager-api
      dockerfile: Dockerfile
    volumes:
      - ./notion-manager-api:/app
      - .env:/app/.env
      - ./configs/notion-manager-api:/app/configs
      - ./secrets:/app/secrets
    command: make run
    restart: unless-stopped
  
  tg-task-parser:
    build: 
      context: ./tg-task-parser
      dockerfile: Dockerfile
    volumes:
      - ./tg-task-parser:/app
      - .env:/app/.env
      - ./configs/tg-task-parser:/app/configs
    command: make run
    restart: unless-stopped
  
  app:
    image: node:latest
    volumes:
      - ./app:/app
      - .env:/app/.env
    working_dir: /app
    command: bash -c "npm install && npm run build"
  
  nginx:
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./configs/nginx/nginx-prod.conf:/etc/nginx/nginx.conf
      - ./app/dist:/usr/share/nginx/html
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - notion-manager-api
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      /bin/sh -c 'trap exit TERM; 
      while :; do 
        certbot renew --non-interactive --agree-tos --email mark.corray.off@gmail.com; 
        sleep 12h & wait $${!}; 
      done;'
    restart: unless-stopped

  db:
    image: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    ports:
      - 5432:5432